From de4e9ec29204e0afcfa19414cc86fe7b5cb7784c Mon Sep 17 00:00:00 2001
From: Alec Leamas <leamas.alec@nowhere.net>
Date: Sun, 15 May 2022 05:34:41 +0200
Subject: [PATCH] Run platform check (#2694).

For Debian/Ubuntu/Raspbian packages on arm64 (typically from
backports) issue a warning about non-existing plugins. Also
inform user that Flatpak supports plugins.

Closes: #2694

Forwarded: https://github.com/OpenCPN/OpenCPN/pull/2702
---
 CMakeLists.txt           |   2 +
 include/check_platform.h |  29 ++++++++
 src/chart1.cpp           |   2 +
 src/check_platform.cpp   | 138 +++++++++++++++++++++++++++++++++++++++
 src/navutil.cpp          |   5 ++
 5 files changed, 176 insertions(+)
 create mode 100644 include/check_platform.h
 create mode 100644 src/check_platform.cpp

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4e954257d..9737013f3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -812,6 +812,7 @@ set(
   include/chartdbs.h
   include/chartimg.h
   include/chcanv.h
+  include/check_platform.h
   include/ChInfoWin.h
   include/compass.h
   include/concanv.h
@@ -946,6 +947,7 @@ set(
   src/chartdbs.cpp
   src/chartimg.cpp
   src/chcanv.cpp
+  src/check_platform.cpp
   src/ChInfoWin.cpp
   src/compass.cpp
   src/concanv.cpp
diff --git a/include/check_platform.h b/include/check_platform.h
new file mode 100644
index 000000000..8f8fe5808
--- /dev/null
+++ b/include/check_platform.h
@@ -0,0 +1,29 @@
+/******************************************************************************
+ *
+ * Project:  OpenCPN
+ *
+ * Purpose: Warning message for platforms without plugins
+ *
+ ***************************************************************************
+ *   Copyright (C) 2021 Alec Leamas                                        *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, write to the                         *
+ *   Free Software Foundation, Inc.,                                       *
+ *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,  USA.         *
+ ***************************************************************************
+ */
+
+#include <wx/window.h>
+
+void check_platform(wxWindow* parent);
diff --git a/src/chart1.cpp b/src/chart1.cpp
index 45b27943d..0078300d9 100644
--- a/src/chart1.cpp
+++ b/src/chart1.cpp
@@ -93,6 +93,7 @@
 #include "chartdb.h"
 #include "chartimg.h"  // for ChartBaseBSB
 #include "chcanv.h"
+#include "check_platform.h"
 #include "cm93.h"
 #include "compass.h"
 #include "concanv.h"
@@ -2919,6 +2920,7 @@ MyFrame::MyFrame(wxFrame *frame, const wxString &title, const wxPoint &pos,
 
   m_resizeTimer.SetOwner(this, RESIZE_TIMER);
   m_recaptureTimer.SetOwner(this, RECAPTURE_TIMER);
+  check_platform(this);
 
 #ifdef __WXOSX__
   // Enable native fullscreen on macOS
diff --git a/src/check_platform.cpp b/src/check_platform.cpp
new file mode 100644
index 000000000..96dd3c1d5
--- /dev/null
+++ b/src/check_platform.cpp
@@ -0,0 +1,138 @@
+/******************************************************************************
+ *
+ * Project:  OpenCPN
+ *
+ * Purpose: Warning message for platforms without plugins
+ *
+ ***************************************************************************
+ *   Copyright (C) 2021 Alec Leamas                                        *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, write to the                         *
+ *   Free Software Foundation, Inc.,                                       *
+ *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,  USA.         *
+ ***************************************************************************
+ */
+
+#include "config.h"
+
+#include <string>
+
+#include <wx/button.h>
+#include <wx/checkbox.h>
+#include <wx/dialog.h>
+#include <wx/panel.h>
+#include <wx/sizer.h>
+#include <wx/statline.h>
+#include <wx/stattext.h>
+
+#include "check_platform.h"
+
+extern bool g_hide_no_plugins_dlg;
+
+static const char* const MESSAGE = _(R"""(
+Unfortunately, there are no plugins available
+for this OpenCPN package. However, by
+installing OpenCPN using Flatpak instead
+plugins are supported. See the Getting Started
+chapter in the User Manual,
+)""");
+
+static const char* const HIDE_DIALOG_LABEL =
+    _("Do not show this dialog next time");
+
+/** The "Dont show this message next time" checkbox. */
+struct HideCheckbox : public wxCheckBox {
+  HideCheckbox(wxWindow* parent, const char* label)
+      : wxCheckBox(parent, wxID_ANY, label, wxDefaultPosition, wxDefaultSize,
+                   wxALIGN_RIGHT) {
+    SetValue(g_hide_no_plugins_dlg);
+    Bind(wxEVT_CHECKBOX,
+         [&](wxCommandEvent& ev) { g_hide_no_plugins_dlg = ev.IsChecked(); });
+  }
+};
+
+/**  Line with  "Don't show this message..." checkbox  */
+struct HidePanel : wxPanel {
+  HidePanel(wxWindow* parent, const char* label)
+      : wxPanel(parent) {
+    auto hbox = new wxBoxSizer(wxHORIZONTAL);
+    hbox->Add(1, 1, 100, wxEXPAND);  // Expanding spacer
+    hbox->Add(new HideCheckbox(this, label), wxSizerFlags().Expand());
+    SetSizer(hbox);
+    Fit();
+    Show();
+  }
+};
+
+/** Bottom panel with OK button. */
+struct Buttons : public wxPanel  {
+  Buttons(wxWindow* parent): wxPanel(parent) {
+    // The natural height seems broken on GTK:
+    auto size = GetTextExtent("OK");
+    size.SetHeight(size.GetHeight() * 3);
+    SetMinSize(size);
+
+    auto hbox = new wxBoxSizer(wxHORIZONTAL);
+    auto flags = wxSizerFlags().Right().Bottom().Border();
+    hbox->Add(1, 1, 100, wxEXPAND);  // Expanding spacer
+    auto ok = new wxButton(this, wxID_OK);
+    hbox->Add(ok, flags);
+    SetSizer(hbox);
+    Fit();
+    Show();
+  }
+};
+
+
+/** Main top-level dialog. */
+class NoPluginsDialog : public wxDialog {
+public:
+  NoPluginsDialog(wxWindow* parent)
+      : wxDialog(parent, wxID_ANY, _("No plugins available")) {
+    // Make window at least 50 char wide to accomodate MESSAGE
+    auto size = GetTextExtent("abcdeFGHIJ0");
+    size.SetWidth(size.GetWidth() * 4);
+    SetMinSize(size);
+
+    auto sizer = new wxBoxSizer(wxVERTICAL);
+    auto flags = wxSizerFlags().Expand().Border();
+    sizer->Add(new wxStaticText(this, wxID_ANY, MESSAGE), flags);
+    sizer->Add(new wxStaticLine(this), flags);
+    sizer->Add(new HidePanel(this, HIDE_DIALOG_LABEL), flags.Right());
+    sizer->Add(new wxStaticLine(this), wxSizerFlags().Expand());
+    sizer->Add(new Buttons(this), wxSizerFlags().Border().Expand());
+    SetSizer(sizer);
+    Fit();
+    Layout();
+    Show();
+  }
+};
+
+#ifdef FLATPAK
+// On Flatpak plugins are always available.
+void check_platform(wxWindow* parent) {}
+
+#else
+void check_platform(wxWindow* parent) {
+  using namespace std;
+
+  if (g_hide_no_plugins_dlg) return;
+  std::string t(PKG_TARGET);
+  if (t.find("aarch64") == string::npos && t.find("arm64") == string::npos) {
+    return;
+  }
+  NoPluginsDialog dlg(parent);
+  dlg.ShowModal();
+}
+#endif
diff --git a/src/navutil.cpp b/src/navutil.cpp
index 123216817..3ffafcdac 100644
--- a/src/navutil.cpp
+++ b/src/navutil.cpp
@@ -476,6 +476,8 @@ static const long long lNaN = 0xfff8000000000000;
 #define NAN (*(double *)&lNaN)
 #endif
 
+bool g_hide_no_plugins_dlg;
+
 // Layer helper function
 
 wxString GetLayerName(int id) {
@@ -571,6 +573,7 @@ int MyConfig::LoadMyConfig() {
   wxDisplaySize(&display_width, &display_height);
 
   //  Set up any defaults not set elsewhere
+  g_hide_no_plugins_dlg = false;
   g_useMUI = true;
   g_TalkerIdText = _T("EC");
   g_maxWPNameLength = 6;
@@ -804,6 +807,7 @@ int MyConfig::LoadMyConfigRaw(bool bAsTemplate) {
     g_memCacheLimit = mem_limit * 1024;  // convert from MBytes to kBytes
 
   Read(_T ( "UseModernUI5" ), &g_useMUI);
+  Read("HideNoPluginsDlg", &g_hide_no_plugins_dlg);
 
   Read(_T( "NCPUCount" ), &g_nCPUCount);
 
@@ -2407,6 +2411,7 @@ void MyConfig::UpdateSettings() {
   Write(_T ( "TrackRotateAt" ), g_track_rotate_time);
   Write(_T ( "TrackRotateTimeType" ), g_track_rotate_time_type);
   Write(_T ( "HighlightTracks" ), g_bHighliteTracks);
+  Write("HideNoPluginsDlg", g_hide_no_plugins_dlg);
 
   Write(_T ( "InitialStackIndex" ), g_restore_stackindex);
   Write(_T ( "InitialdBIndex" ), g_restore_dbindex);
-- 
2.36.1

