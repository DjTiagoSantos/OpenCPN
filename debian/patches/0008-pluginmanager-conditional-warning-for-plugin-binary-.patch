From: Alec Leamas <leamas.alec@nowhere.net>
Date: Wed, 9 Sep 2020 18:59:40 +0200
Subject: pluginmanager: conditional warning for plugin binary contents.

Downstream distros, notably Debian, has a need to present a
warning to user when downloading binary content not built
from source on Debian servers.
---
 CMakeLists.txt        |  8 +++++++-
 config.h.in           |  2 +-
 src/chart1.cpp        |  1 +
 src/navutil.cpp       |  9 +++++++++
 src/pluginmanager.cpp | 36 +++++++++++++++++++++++++++++++++++-
 5 files changed, 53 insertions(+), 3 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2cde27d..66511e1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -299,7 +299,7 @@ set(
     STRING
     "Use bundled libraries instead of system's [ON, OFF or comma-sep list]"
 )
-
+option(OCPN_PLUGIN_CONTENTS_WARN "Warn user for binary plugin contents" OFF)
 option(OCPN_USE_NEWSERIAL "Use new serial communication implementation" ON)
 option(OCPN_USE_CURL "Use Curl libraries" ON)
 option(OCPN_USE_SVG "Use SVG graphics" ON)
@@ -631,6 +631,12 @@ if (ARCH MATCHES "arm*" AND (NOT QT_ANDROID))
   add_definitions(-DocpnARM)
 endif (ARCH MATCHES "arm*" AND (NOT QT_ANDROID))
 
+if (OCPN_PLUGIN_CONTENTS_WARN)
+  set(PLUGIN_CONTENTS_WARN ON)
+else ()
+  set(PLUGIN_CONTENTS_WARN OFF)
+endif ()
+
 IF(DEFINED _wx_selected_config)
   IF(_wx_selected_config MATCHES "androideabi-qt")
     MESSAGE (STATUS "Qt_Base: " ${Qt_Base})
diff --git a/config.h.in b/config.h.in
index 4cd9ac7..a0cda3c 100644
--- a/config.h.in
+++ b/config.h.in
@@ -28,7 +28,7 @@
 #cmakedefine TIXML_USE_STL
 #endif
 
-
+#cmakedefine PLUGIN_CONTENTS_WARN
 #cmakedefine OPENGL_FOUND
 #cmakedefine HAVE_PORTAUDIO
 #cmakedefine HAVE_SYSTEM_CMD_SOUND
diff --git a/src/chart1.cpp b/src/chart1.cpp
index 93d546d..f1da276 100644
--- a/src/chart1.cpp
+++ b/src/chart1.cpp
@@ -501,6 +501,7 @@ double                    g_COGAvg;
 bool                      g_bLookAhead;
 bool                      g_bskew_comp;
 bool                      g_bopengl;
+bool                      g_pluginContentsWarned;  // true if plugin contents warning is shown
 bool                      g_bSoftwareGL;
 bool                      g_bShowFPS;
 bool                      g_bsmoothpanzoom;
diff --git a/src/navutil.cpp b/src/navutil.cpp
index eed3bd6..78e82c2 100644
--- a/src/navutil.cpp
+++ b/src/navutil.cpp
@@ -310,6 +310,9 @@ extern wxString         g_localeOverride;
 
 extern bool             g_bCourseUp;
 extern bool             g_bLookAhead;
+#ifdef PLUGIN_CONTENTS_WARN
+extern bool             g_pluginContentsWarned;
+#endif
 extern int              g_COGAvgSec;
 extern bool             g_bMagneticAPB;
 extern bool             g_bShowChartBar;
@@ -899,6 +902,9 @@ int MyConfig::LoadMyConfigRaw( bool bAsTemplate )
         Read( _T ( "GPUTextureMemSize" ), &g_GLOptions.m_iTextureMemorySize );
         Read( _T ( "DebugOpenGL" ), &g_bDebugOGL );
         Read( _T ( "OpenGL" ), &g_bopengl );
+#ifdef PLUGIN_CONTENTS_WARN
+        Read( _T ( "PluginContentsWarned" ), &g_pluginContentsWarned );
+#endif
         Read( _T ( "SoftwareGL" ), &g_bSoftwareGL );
     }
 #endif
@@ -2338,6 +2344,9 @@ void MyConfig::UpdateSettings()
 
     Write( _T ( "SkewToNorthUp" ), g_bskew_comp );
     Write( _T ( "OpenGL" ), g_bopengl );
+#ifdef PLUGIN_CONTENTS_WARN
+    Write( _T ( "PluginContentsWarned" ), g_pluginContentsWarned );
+#endif
     Write( _T ( "SoftwareGL" ), g_bSoftwareGL );
     Write( _T ( "ShowFPS" ), g_bShowFPS );
     
diff --git a/src/pluginmanager.cpp b/src/pluginmanager.cpp
index 2882ab3..a534f39 100644
--- a/src/pluginmanager.cpp
+++ b/src/pluginmanager.cpp
@@ -159,6 +159,7 @@ extern ocpnStyle::StyleManager* g_StyleManager;
 extern options         *g_pOptions;
 extern Multiplexer     *g_pMUX;
 extern bool             g_bShowChartBar;
+extern bool             g_pluginContentsWarned;
 extern Routeman        *g_pRouteMan;
 extern WayPointman     *pWayPointMan;
 extern Select          *pSelect;
@@ -372,7 +373,40 @@ static std::vector<PluginMetadata> getUpdates(const char* name)
     return updates;
 }
 
+static const char* PLUGIN_CONTENTS_WARN_MSG = _( \
+  "Downloading binary contents form 3-rd party sources is not endorsed\n"
+  " by Debian. Downloaded plugins are also not vetted in the Debian \n"
+  " review process. Continue?"
+);
 
+
+/**
+ * Display a warning for binary plugin contents if
+ * g_pluginContentsWarned is not set. Set it to avoid
+ * further messages. Return true if OK to proceed with
+ * download.
+ */
+
+#ifdef PLUGIN_CONTENTS_WARN
+static bool check_plugin_contents_warned()
+{
+    if (g_pluginContentsWarned) {
+        return true; 
+    }
+    if (!g_pluginContentsWarned) {
+        wxMessageDialog dlg(gFrame, PLUGIN_CONTENTS_WARN_MSG,
+                            wxString(_("Contents Warning")),
+                            wxYES_NO | wxCANCEL | wxICON_QUESTION);
+        int r = dlg.ShowModal();
+        if (r == wxID_YES) {
+            g_pluginContentsWarned = true;
+        }
+    }
+    return g_pluginContentsWarned;
+}
+#else
+static bool inline check_plugin_contents_warned() { return true; };
+#endif
 /**
  * Return number of existing files named filename in the list of
  * dirs.
@@ -437,7 +471,7 @@ static void run_update_dialog(PluginListPanel* parent,
         g_Platform->HideBusySpinner();
 
     }
-
+    check_plugin_contents_warned();
     wxLogMessage("Installing %s", update.name.c_str());
     
     auto pluginHandler = PluginHandler::getInstance();
